//
// Generated file, do not edit! Created by opp_msgtool 6.0 from arrivalMsg.msg.
//

#ifndef __ARRIVALMSG_M_H
#define __ARRIVALMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ArrivalMsg;
/**
 * Class generated from <tt>arrivalMsg.msg:2</tt> by opp_msgtool.
 * <pre>
 * packet ArrivalMsg
 * {
 *     int priority = 0;
 *     simtime_t firstTime = 0;
 *     simtime_t lastTimeJoinServer = 0;
 *     simtime_t lastTimeJoinQueue = 0;
 *     simtime_t queueingTime = 0;
 *     simtime_t passedServiceTime = 0;
 *     bool isFirstTime = true;
 * }
 * </pre>
 */
class ArrivalMsg : public ::omnetpp::cPacket
{
  protected:
    int priority = 0;
    omnetpp::simtime_t firstTime = 0;
    omnetpp::simtime_t lastTimeJoinServer = 0;
    omnetpp::simtime_t lastTimeJoinQueue = 0;
    omnetpp::simtime_t queueingTime = 0;
    omnetpp::simtime_t passedServiceTime = 0;
    bool isFirstTime_ = true;

  private:
    void copy(const ArrivalMsg& other);

  protected:
    bool operator==(const ArrivalMsg&) = delete;

  public:
    ArrivalMsg(const char *name=nullptr, short kind=0);
    ArrivalMsg(const ArrivalMsg& other);
    virtual ~ArrivalMsg();
    ArrivalMsg& operator=(const ArrivalMsg& other);
    virtual ArrivalMsg *dup() const override {return new ArrivalMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getPriority() const;
    virtual void setPriority(int priority);

    virtual omnetpp::simtime_t getFirstTime() const;
    virtual void setFirstTime(omnetpp::simtime_t firstTime);

    virtual omnetpp::simtime_t getLastTimeJoinServer() const;
    virtual void setLastTimeJoinServer(omnetpp::simtime_t lastTimeJoinServer);

    virtual omnetpp::simtime_t getLastTimeJoinQueue() const;
    virtual void setLastTimeJoinQueue(omnetpp::simtime_t lastTimeJoinQueue);

    virtual omnetpp::simtime_t getQueueingTime() const;
    virtual void setQueueingTime(omnetpp::simtime_t queueingTime);

    virtual omnetpp::simtime_t getPassedServiceTime() const;
    virtual void setPassedServiceTime(omnetpp::simtime_t passedServiceTime);

    virtual bool isFirstTime() const;
    virtual void setIsFirstTime(bool isFirstTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ArrivalMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ArrivalMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline ArrivalMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<ArrivalMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __ARRIVALMSG_M_H

